# Generated by Django 3.2.10 on 2022-02-04 13:00

from django.db import migrations, models
import user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rolls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll', models.CharField(blank=True, max_length=30, null=True)),
                ('details', models.TextField(default='', max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('add_date', models.DateTimeField(auto_now_add=True, verbose_name='add date')),
                ('modify_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'User Rolls',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=30, null=True)),
                ('mobile', models.CharField(blank=True, max_length=13, null=True)),
                ('address1', models.TextField(blank=True, max_length=150, null=True)),
                ('address2', models.TextField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('land_mark', models.CharField(blank=True, max_length=60)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=12)),
                ('is_customer', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('activation_key', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('roll', models.ManyToManyField(blank=True, default=None, to='user.Rolls', verbose_name='user_rolls')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.managers.UserManager()),
            ],
        ),
    ]
